{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavaScript Projects\\\\React\\\\react-new-start\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { createRef, useMemo, useState } from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList.jsx\";\nimport MyInput from \"./components/UI/input/MyInput.jsx\";\nimport PostForm from \"./components/PostForm.jsx\";\nimport MySelect from \"./components/UI/select/MySelect.jsx\";\nimport PostFilter from \"./components/PostFilter.jsx\";\nimport MyModal from \"./components/UI/MyModal/MyModal.jsx\";\nimport MyButton from \"./components/UI/button/MyButton.jsx\";\nimport { usePost } from \"./components/hooks/usePosts.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePost(posts, filter.sort, filter.query);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const fetchPosts = async () => {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n    console.log(response.data);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchPosts(),\n      children: \"Get Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      style: {\n        marginTop: 30\n      },\n      children: \"Create new Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Posts about JS'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"arYvc8AdkGLl36G1jxJ8FWN1yqk=\", false, function () {\n  return [usePost];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createRef","useMemo","useState","PostList","MyInput","PostForm","MySelect","PostFilter","MyModal","MyButton","usePost","axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","createPost","newPost","fetchPosts","response","get","console","log","data","removePost","post","p","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","style","marginTop","margin","remove","title","_c","$RefreshReg$"],"sources":["C:/JavaScript Projects/React/react-new-start/src/App.js"],"sourcesContent":["import React, { createRef, useMemo, useState } from \"react\";\nimport './styles/App.css'\nimport PostList from \"./components/PostList.jsx\";\nimport MyInput from \"./components/UI/input/MyInput.jsx\";\nimport PostForm from \"./components/PostForm.jsx\";\nimport MySelect from \"./components/UI/select/MySelect.jsx\";\nimport PostFilter from \"./components/PostFilter.jsx\";\nimport MyModal from \"./components/UI/MyModal/MyModal.jsx\";\nimport MyButton from \"./components/UI/button/MyButton.jsx\";\nimport { usePost } from \"./components/hooks/usePosts.js\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [filter, setFilter] = useState({sort: '', query: ''})\n  const [modal, setModal] = useState(false)\n  const sortedAndSearchedPosts = usePost(posts, filter.sort, filter.query)\n\n\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n    setModal(false)\n  }\n\n  const fetchPosts = async() => {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\n    console.log(response.data)\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => fetchPosts()}>Get Posts</button>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost}/>\n      </MyModal>\n      \n      <MyButton onClick={() => setModal(true)} style={{marginTop: 30}}>Create new Post</MyButton>\n\n      <hr style={{margin: \"15px 0\"}}/>\n\n      <PostFilter \n        filter={filter} \n        setFilter={setFilter}\n        />\n\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title={'Posts about JS'}/>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}