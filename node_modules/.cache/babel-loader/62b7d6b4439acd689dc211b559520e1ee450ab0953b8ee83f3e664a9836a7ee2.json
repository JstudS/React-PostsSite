{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport const useObserver = (ref, canLoad, isLoad, callback) => {\n  _s();\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoad) return;\n    if (observer.current) observer.current.disconnect();\n    const cb = (entries, observer) => {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoad]);\n};\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"names":["useEffect","useRef","useObserver","ref","canLoad","isLoad","callback","_s","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"sources":["C:/JavaScript Projects/React/react-new-start/src/hooks/useObesrver.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoad, callback) => {\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        if(isLoad) return\r\n        if(observer.current) observer.current.disconnect()\r\n        const cb = (entries, observer) => {\r\n          if(entries[0].isIntersecting && canLoad){\r\n            callback()\r\n          }\r\n        };\r\n        observer.current = new IntersectionObserver(cb);\r\n        observer.current.observe(ref.current)\r\n      }, [isLoad])\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC3D,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAC;EACzBD,SAAS,CAAC,MAAM;IACZ,IAAGK,MAAM,EAAE;IACX,IAAGG,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACC,OAAO,CAACC,UAAU,CAAC,CAAC;IAClD,MAAMC,EAAE,GAAGA,CAACC,OAAO,EAAEJ,QAAQ,KAAK;MAChC,IAAGI,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIT,OAAO,EAAC;QACtCE,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACDE,QAAQ,CAACC,OAAO,GAAG,IAAIK,oBAAoB,CAACH,EAAE,CAAC;IAC/CH,QAAQ,CAACC,OAAO,CAACM,OAAO,CAACZ,GAAG,CAACM,OAAO,CAAC;EACvC,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;AAClB,CAAC;AAAAE,EAAA,CAbYL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}