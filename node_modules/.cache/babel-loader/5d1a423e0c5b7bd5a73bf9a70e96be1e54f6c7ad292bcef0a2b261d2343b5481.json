{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavaScript Projects\\\\React\\\\react-new-start\\\\src\\\\pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"./components/UI/pagination/Pagination.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePos(posts, filter.sort, filter.query);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const responce = await PostService.getAll(limit, page);\n    setPosts(responce.data);\n    const totalCount = responce.headers['x-total-count'];\n    setTotalPages(getPagesCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, []);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n    fetchPosts(limit, page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      style: {\n        marginTop: 30\n      },\n      children: \"Create new Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"An error \", postError, \" has ocured\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Posts about JS'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      page: page,\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"+t+61OA+9LOwzHfGa35OjZC0UFE=\", true);\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","usePos","fetchPosts","isPostsLoading","postError","useFetching","responce","PostService","getAll","data","totalCount","headers","getPagesCount","createPost","newPost","removePost","post","p","id","changePage","className","children","MyModal","visible","setVisible","PostForm","create","fileName","_jsxFileName","lineNumber","columnNumber","MyButton","onClick","style","marginTop","margin","PostFilter","display","justifyContent","Loader","PostList","remove","title","_c","$RefreshReg$"],"sources":["C:/JavaScript Projects/React/react-new-start/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Pagination from \"./components/UI/pagination/Pagination.jsx\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([])\r\n  const [filter, setFilter] = useState({sort: '', query: ''})\r\n  const [modal, setModal] = useState(false)\r\n  const [totalPages, setTotalPages] = useState(0)\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(1)\r\n  const sortedAndSearchedPosts = usePos(posts, filter.sort, filter.query)\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async(limit, page) => {\r\n    const responce = await PostService.getAll(limit, page)\r\n    setPosts(responce.data)\r\n    const totalCount = responce.headers['x-total-count']\r\n    setTotalPages(getPagesCount(totalCount, limit))\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchPosts(limit, page)\r\n  }, [])\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost])\r\n    setModal(false)\r\n  }\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) =>{\r\n    setPage(page)\r\n    fetchPosts(limit, page)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MyModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost}/>\r\n      </MyModal>\r\n      \r\n      <MyButton onClick={() => setModal(true)} style={{marginTop: 30}}>Create new Post</MyButton>\r\n\r\n      <hr style={{margin: \"15px 0\"}}/>\r\n\r\n      <PostFilter \r\n        filter={filter} \r\n        setFilter={setFilter}\r\n      />\r\n        {postError && \r\n          <h1>An error {postError} has ocured</h1>\r\n        }\r\n      {isPostsLoading\r\n        ? <div style={{display: 'flex', justifyContent: 'center', marginTop: 50}}><Loader /></div>\r\n        : <PostList remove={removePost} posts={sortedAndSearchedPosts} title={'Posts about JS'}/>\r\n      }\r\n      \r\n      <Pagination \r\n      totalPages={totalPages} \r\n      page={page} \r\n      changePage={changePage}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}